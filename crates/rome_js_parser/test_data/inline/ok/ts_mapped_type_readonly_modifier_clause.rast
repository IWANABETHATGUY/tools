JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@0..5 "type" [] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@5..17 "OptionsFlags" [] [],
            },
            type_parameters: TsTypeParameters {
                l_angle_token: L_ANGLE@17..18 "<" [] [],
                items: TsTypeParameterList [
                    TsTypeParameter {
                        name: TsTypeParameterName {
                            ident_token: IDENT@18..22 "Type" [] [],
                        },
                        constraint: missing (optional),
                        default: missing (optional),
                    },
                ],
                r_angle_token: R_ANGLE@22..24 ">" [] [Whitespace(" ")],
            },
            eq_token: EQ@24..26 "=" [] [Whitespace(" ")],
            ty: TsMappedType {
                l_curly_token: L_CURLY@26..27 "{" [] [],
                readonly_modifier: TsMappedTypeReadonlyModifierClause {
                    operator_token: missing (optional),
                    readonly_token: READONLY_KW@27..39 "readonly" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")],
                },
                l_brack_token: L_BRACK@39..40 "[" [] [],
                property_name: TsTypeParameterName {
                    ident_token: IDENT@40..49 "Property" [] [Whitespace(" ")],
                },
                in_token: IN_KW@49..52 "in" [] [Whitespace(" ")],
                keys_type: TsTypeOperatorType {
                    operator_token: KEYOF_KW@52..58 "keyof" [] [Whitespace(" ")],
                    ty: TsReferenceType {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@58..62 "Type" [] [],
                        },
                        type_arguments: missing (optional),
                    },
                },
                as_clause: missing (optional),
                r_brack_token: R_BRACK@62..63 "]" [] [],
                optional_modifier: missing (optional),
                mapped_type: TsTypeAnnotation {
                    colon_token: COLON@63..65 ":" [] [Whitespace(" ")],
                    ty: TsBooleanType {
                        boolean_token: BOOLEAN_KW@65..72 "boolean" [] [],
                    },
                },
                semicolon_token: SEMICOLON@72..73 ";" [] [],
                r_curly_token: R_CURLY@73..75 "}" [Newline("\n")] [],
            },
            semicolon_token: SEMICOLON@75..76 ";" [] [],
        },
    ],
    eof_token: EOF@76..77 "" [Newline("\n")] [],
}

0: JS_MODULE@0..77
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..76
    0: TS_TYPE_ALIAS_DECLARATION@0..76
      0: TYPE_KW@0..5 "type" [] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@5..17
        0: IDENT@5..17 "OptionsFlags" [] []
      2: TS_TYPE_PARAMETERS@17..24
        0: L_ANGLE@17..18 "<" [] []
        1: TS_TYPE_PARAMETER_LIST@18..22
          0: TS_TYPE_PARAMETER@18..22
            0: TS_TYPE_PARAMETER_NAME@18..22
              0: IDENT@18..22 "Type" [] []
            1: (empty)
            2: (empty)
        2: R_ANGLE@22..24 ">" [] [Whitespace(" ")]
      3: EQ@24..26 "=" [] [Whitespace(" ")]
      4: TS_MAPPED_TYPE@26..75
        0: L_CURLY@26..27 "{" [] []
        1: TS_MAPPED_TYPE_READONLY_MODIFIER_CLAUSE@27..39
          0: (empty)
          1: READONLY_KW@27..39 "readonly" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")]
        2: L_BRACK@39..40 "[" [] []
        3: TS_TYPE_PARAMETER_NAME@40..49
          0: IDENT@40..49 "Property" [] [Whitespace(" ")]
        4: IN_KW@49..52 "in" [] [Whitespace(" ")]
        5: TS_TYPE_OPERATOR_TYPE@52..62
          0: KEYOF_KW@52..58 "keyof" [] [Whitespace(" ")]
          1: TS_REFERENCE_TYPE@58..62
            0: JS_REFERENCE_IDENTIFIER@58..62
              0: IDENT@58..62 "Type" [] []
            1: (empty)
        6: (empty)
        7: R_BRACK@62..63 "]" [] []
        8: (empty)
        9: TS_TYPE_ANNOTATION@63..72
          0: COLON@63..65 ":" [] [Whitespace(" ")]
          1: TS_BOOLEAN_TYPE@65..72
            0: BOOLEAN_KW@65..72 "boolean" [] []
        10: SEMICOLON@72..73 ";" [] []
        11: R_CURLY@73..75 "}" [Newline("\n")] []
      5: SEMICOLON@75..76 ";" [] []
  3: EOF@76..77 "" [Newline("\n")] []
