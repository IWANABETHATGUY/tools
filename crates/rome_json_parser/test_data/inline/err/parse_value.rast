JsonRoot {
    json_value: JsonObject {
        l_curly_token: L_CURLY@0..1 "{" [] [],
        json_member_list: JsonMemberList [
            JsonMember {
                key: JsonString {
                    json_string_literal_token: JSON_STRING_LITERAL@1..7 "\"test\"" [] [],
                },
                colon_token: COLON@7..9 ":" [] [Whitespace(" ")],
                value: JsonNumber {
                    json_number_literal_token: JSON_NUMBER_LITERAL@9..11 "20" [] [],
                },
            },
            COMMA@11..13 "," [] [Whitespace(" ")],
            missing element,
        ],
        r_curly_token: R_CURLY@13..14 "}" [] [],
    },
    eof_token: EOF@14..15 "" [Newline("\n")] [],
}

0: JSON_ROOT@0..15
  0: JSON_OBJECT@0..14
    0: L_CURLY@0..1 "{" [] []
    1: JSON_MEMBER_LIST@1..13
      0: JSON_MEMBER@1..11
        0: JSON_STRING@1..7
          0: JSON_STRING_LITERAL@1..7 "\"test\"" [] []
        1: COLON@7..9 ":" [] [Whitespace(" ")]
        2: JSON_NUMBER@9..11
          0: JSON_NUMBER_LITERAL@9..11 "20" [] []
      1: COMMA@11..13 "," [] [Whitespace(" ")]
      2: (empty)
    2: R_CURLY@13..14 "}" [] []
  1: EOF@14..15 "" [Newline("\n")] []
--
error[SyntaxError]: SyntaxError
  ┌─ parse_value.json:1:12
  │
1 │ {"test": 20, }
  │            ^ Unexpected trailing comma

--
{"test": 20, }
